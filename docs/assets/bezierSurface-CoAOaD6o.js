import{S as G}from"./svg.draggable-CvVuDuZ7.js";import{i as F}from"./index-B7aZGolE.js";class w{constructor(t,s){this.x=t,this.y=s}}class m{constructor(t,s){this.u=t,this.v=s}}class x{constructor(t){this.uvPoints=t,this.screenPoints=new Array(4)}}class k{constructor(t,s){this.drawFn=t,this.param=s}run(){return this.drawFn(this.param)}}class j{constructor(t,s){this.setAnimInfo=t,this.g=s,this.reset()}reset(){this.frames=[],this.n=0}seek(t){this.n=t,this.step()}step(){this.g.clear();const t=this.frames[this.n];if(t){const s=t.run();this.setAnimInfo(F.global.t("bezier.animateInfoTitle",[this.n+1,this.frames.length]),s),this.n+=1}}addFrame(t,s){this.frames.push(new k(s,t))}play(){this.seek(0);const t=4e3/this.frames.length,s=setInterval(()=>{if(this.n>=this.frames.length){clearInterval(s);return}this.step()},t)}plainDraw(){this.seek(this.frames.length-1),this.setAnimInfo("","")}}function g(c){let t=1;for(let s=2;s<=c;s++)t*=s;return t}function y(c,t){return g(c)/(g(t)*g(c-t))}function P(c,t){return c===0&&t===0?1:Math.pow(c,t)}class S{constructor(t){t?this.points=t.map(s=>s.map(i=>new w(i[0],i[1]))):this.points=Array(3).fill().map(()=>Array(3).fill().map(()=>new w(0,0)))}addRow(){const t=this.points[this.points.length-1].map(s=>new w(s.x,s.y+20));this.points.push(t)}addCol(){for(let t=0;t<this.points.length;t++){const s=this.points[t],i=s[s.length-1];s.push(new w(i.x+20,i.y))}}at(t,s){return this.points[t][s]}}function b(c,t){const s=c.length-1,i=c[0].length-1,e=t.u,o=t.v;let r=new w(0,0);for(let a=0;a<=s;a++){const l=y(s,a)*P(o,a)*P(1-o,s-a);for(let f=0;f<=i;f++){const v=y(i,f)*P(e,f)*P(1-e,i-f);r.x+=c[a][f].x*l*v,r.y+=c[a][f].y*l*v}}return r}class ${constructor(t,s,i){this.svg=G(t),this.curveG=this.svg.group(),this.controlG=this.svg.group(),this.ps=new S(i),this.uvPoints=s,this.recreateSvgControlPoints(),this.redraw()}recreateSvgControlPoints(){this.controlG.clear();for(let t=0;t<this.ps.points.length;t++){const s=this.ps.points[t];for(let i=0;i<s.length;i++){const e=s[i];e.i=t,e.j=i,this.controlG.circle(20).fill("#ff0000").center(e.x,e.y)}}}redraw(){this.uvPoints.map(s=>b(this.ps.points,s)).forEach(s=>{this.curveG.circle(10).fill("#000000").center(s.x,s.y)})}}class D{constructor(t,s={firstDivide,divide,showGrid,count},i,e=null){if(this.svg=G(t),this.curveG=this.svg.group(),this.controlG=this.svg.group(),this.anim=new j(i,this.curveG),this.ps=new S(e),!e)for(let o=0;o<this.ps.points.length;o++){const r=this.ps.points[o];for(let a=0;a<r.length;a++)r[a].x=a*150,r[a].y=o*150}this.recreateSvgControlPoints(),this.param=s,this.redraw()}addRow(){this.ps.addRow(),this.recreateSvgControlPoints(),this.redraw()}addCol(){this.ps.addCol(),this.recreateSvgControlPoints(),this.redraw()}static load(t){return JSON.parse(t)}save(){return JSON.stringify(this.ps.points.map(s=>s.map(i=>[Math.floor(i.x),Math.floor(i.y)])))}recreateSvgControlPoints(){this.controlG.clear();for(let t=0;t<this.ps.points.length;t++){const s=this.ps.points[t];for(let i=0;i<s.length;i++){const e=s[i];e.i=t,e.j=i;const o=this.controlG.circle(10).fill("#337ecc").center(e.x,e.y);o.draggable().on("dragmove",r=>{e.x=r.detail.box.cx,e.y=r.detail.box.cy,this.redraw(),o.coordText=this.curveG.text(`[${e.i}, ${e.j}](${e.x.toFixed(0)}, ${e.y.toFixed(0)})`).move(e.x-10,e.y+20)}).on("mouseenter",()=>{o.fill("#f89898"),o.coordText=this.curveG.text(`[${e.i}, ${e.j}](${e.x.toFixed(0)}, ${e.y.toFixed(0)})`).move(e.x-10,e.y+20)}).on("mouseleave",()=>{var r;o.fill("#337ecc"),(r=o.coordText)==null||r.remove()})}}}meshDivide(t,s=2,i=s){let e=[];for(const o of t){const r=o.uvPoints[0].u,a=o.uvPoints[1].u,l=o.uvPoints[0].v,f=o.uvPoints[3].v,v=(a-r)/i,d=(f-l)/s;for(let u=0;u<s;u++)for(let h=0;h<i;h++)e.push(new x([new m(r+v*h,l+d*u),new m(r+v*h+v,l+d*u),new m(r+v*h+v,l+d*u+d),new m(r+v*h,l+d*u+d)]))}return e}bezierSurface(t){const{firstDivide:s,divide:i,showGrid:e,count:o}=this.param;let r=new Set([0,1]),a=new Set([0,1]);const l=h=>Math.round(h*1e3),f=h=>{for(const n of h)for(let p=0;p<4;p++)n.screenPoints[p]=b(t,n.uvPoints[p]);return h},v=h=>{h.forEach(n=>{n.uvPoints.forEach(p=>{r.add(l(p.u)),a.add(l(p.v))})})},d=({meshes:h})=>{for(const n of h)(e.value||a.has(l(n.uvPoints[0].v)))&&this.curveG.line(n.screenPoints[0].x,n.screenPoints[0].y,n.screenPoints[1].x,n.screenPoints[1].y).stroke({color:"black"}),(e.value||r.has(l(n.uvPoints[1].u)))&&this.curveG.line(n.screenPoints[1].x,n.screenPoints[1].y,n.screenPoints[2].x,n.screenPoints[2].y).stroke({color:"black"}),(e.value||a.has(l(n.uvPoints[2].v)))&&this.curveG.line(n.screenPoints[2].x,n.screenPoints[2].y,n.screenPoints[3].x,n.screenPoints[3].y).stroke({color:"black"}),(e.value||r.has(l(n.uvPoints[3].u)))&&this.curveG.line(n.screenPoints[3].x,n.screenPoints[3].y,n.screenPoints[0].x,n.screenPoints[0].y).stroke({color:"black"})};this.anim.reset();let u=[new x([new m(0,0),new m(1,0),new m(1,1),new m(0,1)])];this.anim.addFrame({meshes:f(u)},d),u=this.meshDivide(u,s.row,s.col),v(u),this.anim.addFrame({meshes:f(u)},d);for(let h=1;h<o.value;h++)u=this.meshDivide(u,i.row,i.col),this.anim.addFrame({meshes:f(u)},d)}redraw(t=!1){this.bezierSurface(this.ps.points),t?this.anim.play():this.anim.plainDraw()}}export{D as B,$ as a};
